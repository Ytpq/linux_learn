1. General setup (全局步骤)
    1.1 compile also drivers which will load  //同时编译没有下载的驱动程序 --目前没有遇到过要用的
    1.2 compile the kernel with warning as errors //编译有问题的内核  --
    1.3（-v8-16k）local version - append（附加）to kernel release  //这个好像自己自定义内核是，在大版本的linux添加自己的定义
    1.4 automatically append version information to the version string  //精确追踪软件版本
    1.5 build id salt（盐） //给每一个软件构建一个唯一的识别码
    1.6 kernel compression(压缩) mode (Gzip)  
       1.6.1  gzip  //兼容性最好，最成熟
	   1.6.2  zstd  //更为现代，桌面端
	   1.6.3  xz    //最小，但是启动慢
	   1.6.4  lzo/lz4   //快，镜像大
    1.7 default init path  //内核启动最后阶段，创建进程 -- 除非是你自己做了一个系统，否则默认不填
	1.8 （（none））default hostname //主机名设置 none指不设置
	1.9 system v ipc //Inter-Process Communication 内部进程的通信 //是一套比较老的通信协议，对于老的软件支持  --一般启用，免的报错
	1.10 posix message queues //posix(Portable(便携的) Operating System Interface（界面） of UNIX)  //现代化的通信
	1.11 general notification queue //设备的拔插密钥改变提醒通知  
	1.12 enable process_vm_readv/writev syscalls //一个进程对另一个进程可以读写
	1.13 uselib syscalls (for libc5 and earlier)  //过时 --加载共享库的方法
	1.14 auditing(审计) support  //安全，文件修改，用户权限等安全改动记录   --一般不启用
	1.15 irq subsystem（子系统）  //（Interrupt Request）中断请求
		1.15.1  expose irq internals in debugfs //导出中断信息以供调试
    1.16 timer subsystem（子系统） 
	    1.16.1 timer tick(时钟节拍) handling (idle（空闲） dynticks system(tickless idle))   //cpu会一直被中断打断，用于更新时间，查看进程，一下是这个几种模式
		        1.16.1.1 peridic timer tick (constant raye,no dynticks)  //允许cpu中断
				1.16.1.2 idle dynticks system (tickless idle)  //在cpu空闲时停止中断				
				1.16.1.3 full dynticks system (tickless) // 尽可能不中断cpu，用于保持单一进程
	    1.16.2 old idle dynticks config //旧版本的东西，1.16.1是它的升级版本
		1.16.3 high resolution timer support //高精度定时器 --对好性能的硬件，发挥硬件性能
		1.16.4 //默认//（125）clocksource watching maximum allowable skew（偏差） (in microseconds) //两个时钟源的最大偏差
	1.17 bpf subsystem（子系统）
	    1.17.1 enable bpf() system call(调用)  //查看内核行为
		1.17.2 enable bpf just in time compiler(编译器)  //启用jit解释器 ，加快bpf的调用速度
		1.17.3 permanently enable bpf jit and remove bpf interpreter //只是要jit解释器，而不用传统解释器，兼容性下降，性能高
		1.17.4 disable unprivileged bpf by default //禁止非root特权用户使用bpf ，安全，文件修改，用户权限等安全改动记录
		1.17.5 preload bpf file system with kernel specific profram and map（映射） iterators(迭代器)  //更加快速的使用bpf
		1.17.6 enable bpf lsm instrumentation //内核级安全检测，安全定制
	1.18 preemption model (preemptible（可抢占的） kernel (low-latency(延迟) desktop))  //内核抢占cpu 策略
	    1.18.1 no forced preemption (server) //适合服务器 ，不强制抢占
		1.18.2 voluntary kernel preemption (desktop) //适合桌面端，个别事件可以抢占
		1.18.3 preemptible kernel (low-latency desktop) //桌面端，可以随时抢占
		1.18.4 full preemptible kernel (real-time) //实时抢占，工业，嵌入式
	1.19 preemption behabiour defined on boot //在boot中可以切换抢占模式，允许动态切换
	1.20 core scheduling(调度) for smt （Simultaneous（同时） Multi threading（多线程））超线程  //安全性，同时可以提高稳定性 --保持同一组核心跑同一个任务
	1.21 cpu/task time and stats accounting (任务时间和统计记录)
	    1.21.1
		
		
	

	   
   